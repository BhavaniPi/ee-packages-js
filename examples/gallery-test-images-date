/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[38.99017811568136, 9.150180966271892],
          [38.99017811568136, 9.083909312983865],
          [39.0431356504714, 9.083909312983865],
          [39.0431356504714, 9.150180966271892]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
/*
Copyright (c) 2018 Gennadii Donchyts. All rights reserved.

This work is licensed under the terms of the MIT license.  
For a copy, see <https://opensource.org/licenses/MIT>.
*/

var assets = require('users/gena/packages:assets')
var imageGallery = require('users/gena/packages:gallery')
var text = require('users/gena/packages:text')
var scale = Map.getScale()
var bounds = geometry.bounds()

// get images from one or multiple missions
var images = assets.getImages(bounds, {
  filter: ee.Filter.date("2020-01-01", "2022-01-01"),
  missions: [
    'S2', 
    'L8', 
    'L7', 
    //'L5'
  ],
  filterMasked: true,
})

// images = assets.getMostlyCleanImages(images, bounds)

images = images.filter(ee.Filter.calendarRange(8, 10, 'month')).sort('system:time_start')

images = images.map(function(i) {
  var rgb = i.visualize({ bands: ['swir', 'nir', 'green'], min: 0.05, max: 0.5 })
  
  var pt = text.getLocation(bounds, 'left', '2%', '2%')
  var label = text.draw(i.date().format('YYYY-MM-dd'), pt, scale, { textColor: '000000', outlineColor: 'ffffff', outlineWidth: 2.5, outlineOpacity: 0.6, fontSize: 18 })  
  
  return rgb.blend(label)
})

// add image gallery
var options = {proj: 'EPSG:3857', flipX: false, flipY: true }
var rows = 5, columns = 8
var gallery = imageGallery.draw(images, bounds, rows, columns, scale, options)

Map.addLayer(gallery, {}, 'gallery (false-color)', true);
