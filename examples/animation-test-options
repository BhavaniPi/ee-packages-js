/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var images = ee.ImageCollection("NOAA/GOES/16/MCMIPF");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// generate some nice image collection

images = images
  .filterDate('2020-08-01T09:00', '2020-08-02T09:00')
  .map(function(i) { 
    var c = function(n) { return ee.Number(i.get(n)) }
    
    var b = i.select('CMI_C01').resample('bicubic').multiply(c('CMI_C01_scale')).add(c('CMI_C01_offset')).unitScale(0, 1.3)
    var r = i.select('CMI_C02').resample('bicubic').multiply(c('CMI_C02_scale')).add(c('CMI_C02_offset')).unitScale(0, 1.3)
    var n = i.select('CMI_C03').resample('bicubic').multiply(c('CMI_C03_scale')).add(c('CMI_C03_offset')).unitScale(0, 1.3)
    
    return ee.Image([r.divide(b), n, b])
      .set({ t: i.date().format('YYYY-MM-dd HH:mm:ss') }) 
  })
  
print(images.size())

// animate

var animation = require('users/gena/packages:animation')

var a = animation.animate(images, {
  vis: {   
    min: [0.7, 0.05, 0.05],
    max: [1.5, 0.4, 0.2],
    gamma: 1.3
  },
  width: '20%',
  position: 'bottom-center', // works as the rest of the widgets
  label: 't',                // label to show next to the slider
  timeStep: 50,              // ms between frames when playing
  preload: true,             // set to false to avoid preloading all frames
  preloadCount: 5,           // number of frames to preload when preload is false
  compact: true,             // set to true to hide some controls, might be useful for apps
  hidePlay: true,
  maxFrames: images.size()
})


// post-process, customize styling of some controls

print('Executed *before* animation map layers are added')

a.then(function() {
  print('Executed after animated layers are added')

  a.panel.style().set({ 'background-color': '#00000055' })
  a.panel.widgets().get(0).style().set({ 'background-color': '#00000000' })
  a.panel.widgets().get(1).style().set({ 'background-color': '#00000000' })
  a.panel.widgets().get(2).style().set({ 'background-color': '#00000000' })
  a.panel.widgets().get(0).style().set({ 'color': '#ffffff' })
  a.panel.widgets().get(1).style().set({ 'color': '#ffffff' })
  a.panel.widgets().get(1).style().set({ fontSize: 0 })
  a.panel.widgets().get(2).style().set({ 'color': '#ffffff' })
  
  
  // change properties of the main panel of animation controls
  print(a.panel)
  a.panel.widgets().reset([])
})

